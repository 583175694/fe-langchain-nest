[["0",{"pageContent":"一、 需求背景\n\n目前企业及个人注销流程操作流程繁琐且耗费人力，因此希望在管理台可以实现自动化操作注销。\n\n一、 详细需求\n\n\n1、  管理台——添加白名单菜单：支持查询客户信息，查询一致后可添加用户白名单，用于添加用户注销的权限，且支持反馈用户注销状态\n\n①   筛选查询区域：支持查询已添加白名单的客户，查询字段包含添加日期、注销类型、注销状态、客户姓名、法人手机号和公司名称。\n\n②   添加白名单按钮：点击添加按钮可添加用户注销白名单，每次仅支持添加1个法人维度的注销名单。例如有企业A和企业B两家企业要注销：情况①企业A和企业B分属于不同法人，这里点击添加每次只能添加注销一家企业；②企业A和企业B分属于同个法人，这里可以添加两家企业注销白名单。\n\n③   注销弹窗：\n\n1、添加手机号权限：\n\na.      手机号：添加用户操作注销权限手机号；\n\nb.     注销类型：注销企业、注销个人;\n\n选择注销企业：直接跳转填写企业信息的弹窗；输入手机号、姓名、身份证、企业名称，用企业名称去校验ccif是否有这个企业且是登记在爱普下的，（如果有同一个企业名称查出在爱普下有多个ccif时限制不能让他添加白名单） \n\n选择注销个人：直接跳转填写个人信息的弹窗；提交的时候需要判断是否有企业未注销的情况，否则不能只注销个人；（提示：法人名下有企业未注销，请注销后重试。）输入手机号、姓名、身份证，但是只用身份证去校验，查ecif，看是否有登记在爱普的ecif，如果有，才可以添加该客户的白名单，（但如果有同一个身份证查出在爱普下有多个ecif时限制不能让他添加白名单）\n\n2、添加注销企业信息：支持新增多个企业注销信息，每个注销企业的注销原因需要一一对应\n\na.客户名称：输入法人姓名。","metadata":{"source":"./fileUpload/a.txt","loc":{"lines":{"from":1,"to":28}}}}],["1",{"pageContent":"2、添加注销企业信息：支持新增多个企业注销信息，每个注销企业的注销原因需要一一对应\n\na.客户名称：输入法人姓名。\n\nb. 公司名称: 输入注销的公司名称要与行内系统查询对应，且支持多选查询；用企业名称去校验ccif是否有这个企业且是登记在爱普下的，（如果有同一个企业名称查出在爱普下有多个ccif时限制不能让他添加白名单）\n\nc．法人身份证：输入法人身份证号码\n\nd.注销原因：下拉选择\n\nimage.png\n\n3、注销个人信息：这里需要注意名下所有企业都要完成注销后，才能添加个人注销；\n\na.客户姓名：添加注销白名单法人姓名。\n\nb.身份证号：输入身份证，用身份证去校验，查ecif，看是否有登记在爱普的ecif，如果有，才可以添加该客户的白名单，（但如果有同一个身份证查出在爱普下有多个ecif时限制不能让他添加白名单）\n\nc．触发手机短信或APP通知：添加成功后自动触发短信/APP通知，在app入口可进行操作注销；（通知/短信文案）\n\nd.注销原因：下拉选择\n\n                     image.png\n\n\n\n\n\n\n\n\n\ne.入口开关只要命中了白名单就能看到入口。  不单独做入口的灰度开关控制\n\n4、白名单列表：添加日期、客户姓名掩码、法人手机号掩码、注销类型、备注、生效状态、注销失败的原因、操作（取消白名单、查看详情）。\na.操作：点击取消白名单，取消后客户无权限登录进入；点击查看详情，见管理台交互字段，需要返回注销状态（前端判断后回传注销成功、注销失败、未注销），注销失败原因（旧管理台逻辑判断后回传）\n\n2、前端流程——注销链接：先拉管理台的名单，再核对工商信息。\n\n                       ①   入口开关：需要通过判断是否为添加白名单内的名单来控制入口是否能打开；只要命中了白名单就能看到入口。  不单独做入口的灰度开关控制","metadata":{"source":"./fileUpload/a.txt","loc":{"lines":{"from":28,"to":67}}}}],["2",{"pageContent":"①   入口开关：需要通过判断是否为添加白名单内的名单来控制入口是否能打开；只要命中了白名单就能看到入口。  不单独做入口的灰度开关控制\n\n                       a.添加成功的白名单内的手机号,已完成个人呢实名的客户可以正常登入认证（未实名弹窗拉起实名认证流程），人脸验证后确认注销企业。\n\n                       b.\n\n                      ①   人脸验证：人脸验证与身份证信息一致，可通过登录进入；人脸验证不一致，则进行报错提示（您的人脸验证有误，请重试！）。用新增的刷脸场景\n\n         ④   确认注销页面：这个页面只拉取管理台配置注销的企业或个人信息，管理台未添加的不展示确认；每次只能勾选一家企业，选择注销企业后需要自动反显注销原因。\n\n          ⑤   注销结果页面：\n\n          a.注销成功：前端提示“某某企业/个人，**身份证尾号  注销成功”\n\n          b.注销失败：前端提示“某某企业/个人，**身份证尾号，请联系客服重试。”\n\n          c.审核中：实时告知就不需要审核中。自动审核过度页面，这里返回时间超过5分钟的需要短信反馈注销结果；前端提示“某某企业/个人，**身份证尾号 注销信息审核中，请稍后进入。”\n\n            4、其它——数据上报：需要将管理台添加白名单注销信息上报bdap\n\n            5、白名单限制：在APP参数那控制每天添加白名单的数量，每天添加的数量超过白名单限制数量不可再添加。（超过添加数量报错文案：已超过限制数量，不可添加）","metadata":{"source":"./fileUpload/a.txt","loc":{"lines":{"from":67,"to":87}}}}],["3",{"pageContent":"5、白名单限制：在APP参数那控制每天添加白名单的数量，每天添加的数量超过白名单限制数量不可再添加。（超过添加数量报错文案：已超过限制数量，不可添加）\n\n         6、其他备注：以下不看-------最后一步确认注销的时候，与现有的注销流程保持一致（限制也保持一致，比如有理财余额的不能注销）","metadata":{"source":"./fileUpload/a.txt","loc":{"lines":{"from":87,"to":89}}}}],["4",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n1\n/\n16\nPC\nG技术原力吧\nPC\nG技术原力吧\n首页\n发现\n悦读\n乐问\n码客\n应用 \nK吧 \n搜索\nL\nv 7\n加入K吧\n首页\n技术文章\n活动报名\n内容专题\n头条推荐\n| 导语\n曾梦想有一天可以让用户开口讲需求，话音刚落，系统马上交付功能，没想到这一天来得那么快。ChatGPT让\n软件快速拥有梦幻般自然语言交互界面，当然一切都是人类智慧的结晶，开发仍然是重要的角色。然而未来已来，只\n有拥抱变化，快速进化，才是我们的立足之本。\n开发不存在了？Thor+ChatGPT做了个实验\n文章热榜最高第1名\nkong\njie\n2023-03-21 15:55:26\n8072\n41\n278\n分享\n一、缘起\n2021\n年\n9\n月，我刚到腾讯，在滨海大厦楼下的爱马哥门口。\n我游说\nwonday\n跟我一起做\nThor\n项目时说：\n应用开发的终极形态就是\ntext2app\n，到时产品写好需求给系统，自\n动就能产出想要的功能！但是这需要一个强大的座底，我们首先要能做到全栈的声明式开发，等三五年后人\n工智能更成熟些，就能实现了！\nCURD\n有用但很无趣，人生苦短，我们要让这个工具把我们从中解放出来，\n做更有趣的事情啊！\nwonday\n：\nI'm in!\n然而，我们没想到\nAI\n的成熟来得那么快，\nThor\n只是默默地做了一年多时间，\nChatGPT\n就杀疯了。幸运的是，\nThor\n已经准备好了搭乘这趟\nAI\n的快车，于是，我们花了不到一周的时间，使用\nThor + GPT3.5-turbo \n跑通了\n第一个场景：用自然语言描述运营系统的需求，\nThor\n瞬间交付功能。","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":1,"lines":{"from":1,"to":80}}}}],["5",{"pageContent":"已经准备好了搭乘这趟\nAI\n的快车，于是，我们花了不到一周的时间，使用\nThor + GPT3.5-turbo \n跑通了\n第一个场景：用自然语言描述运营系统的需求，\nThor\n瞬间交付功能。\n二、演示\n可以看一下以下这个录屏，感受一下：\nkong\njie\nPC\nG\\平台技术部\\前端平台开\n作者文章\n•\n开发不存在了？Thor+ChatGP\n实验\n收录文集\n通向A\nGI之路：以ChatG\n浏览 1819\n推荐阅读\n•\nweb前端构建代码删除注释、c\n•\n浅析T\nurbop\nack\n•\n前端代码怎么部署\n•\n如何优化网站性能\n•\nMidjour\nney结合ChatGPT技巧\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":1,"lines":{"from":80,"to":118}}}}],["6",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n2\n/\n16\n录屏展示了通过自然语言创建一个全功能的管理表格并不断通过对话进行无限的功能微调的过程，全程无需\n编码，无需可视化拖拉拽操作，所讲即所得。和前几天微软新版的\npower apps\n演示的自然语言创建表格效果\n相似了：\n上图\n -> Thor\n通过自然语言创建和修改表格功能\n上图\n -> Microsoft Power apps\n通过自然语言添加列到表格。\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":2,"lines":{"from":1,"to":24}}}}],["7",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n3\n/\n16\n对于这个成果，我与一些低代码业界的老板和老师们线下交流过，他们普遍是震惊且好奇的，震惊因为这是\n行业的终极目标，我们怎么一下子就到了，当然更多的人好奇这是怎么做到的，例如怎么训练、怎么突破\nToken\n限制等。\n其实大家关注点可能都错了，\nChatGPT\n带来的成果，在这里只是薄薄的一层交互能力，最核心的，是能支撑\n起这种自然语言交互驱动的\nThor\n体系\n。以下，我将带大家快速了解一下\nThor\n，在最后，也会揭密，如何结合\nChatGPT\n达到视频中的效果（如果等不及可直接跳到第四节）。\n三、\nThor\n之初体验\nThor\n是一套全栈的快速应用开发（\napplication development\n）体系，它的特点是数据模型驱动，通过声明式\n的编码或配置来交付需求。\nThor\n解决的问題理论上涵盖后端和大前端（含\nweb\n、\napp\n、小程序甚至\nchatbot\n）\n等等。\n举一个典型的管理台数据表格的场景，让大家从感性上认识\nThor\n，（\n需要注意的是，\nThor\n并不只能应用于管\n理台的搭建\n）。\n例如我们现在有一张订单的数据表，想要给它做一个前端表格呈现，我们可以分以下三个步骤完成这个需\n求：\n1. \n编写数据模型，描述业务数据的逻辑结构：\n每个业务数据模型的结构定义，只需定义一次即可重复使用，\nthor\n还支持模型间一对一，一对多、多对多这\n种关联关系的配置，满足复杂应用场景\n。\n2. \n配置数据源，假设本次示例的数据存储在关系数据库里面，可直接使用\nThor\n的后端服务，为此\nDB\n的访问\n提供一套全功能的\nGraphQL","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":3,"lines":{"from":1,"to":67}}}}],["8",{"pageContent":"种关联关系的配置，满足复杂应用场景\n。\n2. \n配置数据源，假设本次示例的数据存储在关系数据库里面，可直接使用\nThor\n的后端服务，为此\nDB\n的访问\n提供一套全功能的\nGraphQL\n接口，前端直接配置一个\nGraphQL\n的数据源即可\n:\nconst\n schema \n=\n \n{\n  \n\"Order\"\n:\n \n{\n    \n\"name\"\n:\n \n\"Order\"\n,\n    \n\"label\"\n:\n \n\"\n订单\n\"\n,\n    \n\"fields\"\n:\n \n[\n      \n{\n \n\"name\"\n:\n \n\"product\"\n,\n type\n:\n \n\"string\"\n \n}\n,\n      \n{\n \n\"name\"\n:\n \n\"price\"\n,\n type\n:\n \n\"number\"\n \n}\n,\n      \n{\n \n\"name\"\n:\n \n\"quantity\"\n,\n type\n:\n \n\"integer\"\n \n}\n,\n      \n{\n \n\"name\"\n:\n \n\"user\"\n,\n type\n:\n \n\"string\"\n \n}\n,\n      \n{\n \n\"name\"\n:\n \n\"status\"\n,\n type\n:\n \n\"string\"\n}\n    \n]\n  \n}\n}\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":3,"lines":{"from":67,"to":190}}}}],["9",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n4\n/\n16\n 3. \n编写管理页面，使用\nThorT\nable\n编写订单管理表格\n:\nThorT\nable\n的使用特别简单，只需要指定要展示的模型、想要展示和允许过滤的字段，再指定行、批量以及全\n局操作的类型就可以了。\n \n完成以上代码，\n \n即实成了整个订单列表页面功能的编写。\n可以看到，整个功能的开发过程，我们编写的代码全是用于描述业务数据结构和功能需求，没有\nUI\n相关的细\n枝末节，因为\nThor\n倡议的抽象思路是从产品和用户的视角来设计概念和参数，而不是向用户暴露出过多的程\n序细节，复杂的细节由\nThor\n底层自己使用最佳实践的经验消化并解决掉。这使用\nThor\n对外作为一个声明式的\n开发框架得以成为事实。\n上图\n -> ThorT\nable\n的配置参数抽象视角示意图。\nThor\n的系统架构\nThor\n的系统架构如下图所示：\nconst\n \nDEFAULT_DATASOURCE\n \n=\n \n{\n  operations\n:\n \n{\n    \n[\nModelOperationDefault\n.\nall\n]\n:\n \n{\n      provider\n:\n DatasourceType\n.\ngraphql\n,\n      host\n:\n \n'https://xinghai.woa.com/thor/'\n,\n      path\n:\n \n'/graphql'\n,\n      method\n:\n HttpMethod\n.\nPOST\n    \n}\n  \n}\n}\nconst\n dataSource \n=\n \n{\n  namespace\n:","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":4,"lines":{"from":1,"to":97}}}}],["10",{"pageContent":",\n      method\n:\n HttpMethod\n.\nPOST\n    \n}\n  \n}\n}\nconst\n dataSource \n=\n \n{\n  namespace\n:\n \n'media-order'\n,\n  version\n:\n \n'1.0'\n,\n  models\n:\n \n{\n    \n[\n'order'\n]\n:\n \nDEFAULT_DATASOURCE\n,\n \n// \n设置订单模型的数据源为\nGraphQL\n  \n}\n,\n}\n;\nconst\n config \n=\n \n{\n  schema\n:\n schema \nas\n Schema\n,\n  dataSource\n:\n graphqlSource\n,\n}\n;\n<\nThorConfigProvider \n{\n...\nconfig\n}\n>\n    \n<\nThorTable \n        model\n=\n\"order\"\n        columns\n=\n{\n[\n\"product\"\n,\n \n\"quantity\"\n,\n \n\"price\"\n,\n \n\"user\"\n,\n \n\"status\"\n]\n}\n        filters\n=\n{\n[\n\"product\"\n,\n \n\"status\"\n]\n}\n        rowActions\n=\n{\n[\n\"edit\"\n,\n \n\"delete\"\n]\n}\n,\n        batchActions\n=\n{\n[\n\"delete\"\n]\n}\n,\n        modelActions\n=\n{\n[\n\"add\"\n]\n}\n,\n    \n/\n>\n<\n/\nThorConfigProvider\n>\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":4,"lines":{"from":97,"to":239}}}}],["11",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n5\n/\n16\nThor\n是一个跨前后端全栈的技术架构设计，其中有三个重要的组成部份：\n1. Thor-Schema\n，描述业务数据模型结构（字段构成和校验逻辑）和关系的规范，关注数据模型的逻辑结\n构，而非存储结构及细节，它借鉴\nORM\n的思想，支持跨数据模型的属性访问，模型间支持多种常见的关联关\n系\n —— \n一对多，一对一，多对多。\nThor-schema\n的内容由前后端共同享有，通常建议由后端提供或自动生\n成。\n2. Thor-DataSource\n，描述业务模型的真实数据源，支持异构多源数据的接入，接入的数据经过标准化（模\n型化）后，统一向上以\nGraphQL\n的通用接口暴露给应用开发者。\n3. Thor-Component\n，\nThor\n的前端组件集，目前在管理台领域基于\npro components\n封装了\n一系列的高阶组\n件，如\nThorT\nable\n，\n ThorForm\n，\nThorDetail\n，以及一组\nThorContainer\n用于布局。未来在小程序等移动场景会\n有更多的模型化场景组件推出。\nThor\n的特点\n1. \n模型驱动\n。此处的模型指的是业务数据结构模型。我们认为，数据模型是系统的核心，通过梳理需求确立\n下数据模型后，整个系统地基石就有了，其他的例如\nAPI\n、页面等，均是这些数据模型的外延表达方式，可\n以通过约定快速地生成或动态提供。另外，模型不局限于后端或前端使用，而是前后端共用一套数据模型。\n2. \n全栈思考、全局视角\n。不把前后端隔裂来看待，而是思考如何统一协调，到达最高效的研发效率。数据模","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":5,"lines":{"from":1,"to":58}}}}],["12",{"pageContent":"以通过约定快速地生成或动态提供。另外，模型不局限于后端或前端使用，而是前后端共用一套数据模型。\n2. \n全栈思考、全局视角\n。不把前后端隔裂来看待，而是思考如何统一协调，到达最高效的研发效率。数据模\n型的概念由始至终贯穿着前后端，后端基于模型驱动的理念实现了异构多源数据的统一聚合服务（\niPaaS +\nBaaS\n）\n \n，前端基于模型驱动理念实现了模型化高阶\nUI\n组件，前后端通过模型化的\nGraphQL\n接口实现无缝对\n接，丝滑流畅。\n3. \n极简声明式开发\n。常规\nThor\n的应用开发就是三板斧：写数据模型、配数据源、写交互页面。三种\nDSL\n都是\n语义极其明确，易懂易配置的声明式风格。开发方式方面：除了开发者手写快速；我们还实现了在线配置的\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":5,"lines":{"from":58,"to":83}}}}],["13",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n6\n/\n16\n版本；另外还有你们在\nDemo\n看到的自然语言交互的方式。\n通用低代码\n VS \n场景低代码\n看到这里的读者可能心里已经有一个名词了：原来\nThor\n是个『低代码』系统。其实我一直不强调这是低代码\n系统，因为这种追求开发效益最大化的抽象设计早在『低代码』这个\nBuzz W\nord\n出现之前已有之，况且近年\n『低代码』一词也一度被滥用。但既然提到了『低代码』，我就顺便抛一下个人见解，也算是抛砖引玉吧。\n谈『低代码』最大的麻烦是，『低代码』并没有一个公允的定义（尽管维基百科有定义），有人认为它是可\n视化，有人认为它是高度抽象，所以也渐渐形成两个阵营：一种是追求通过原子化的组件\n + \n可视化编辑器满\n足绝大部份的通用场景开发需求；一种是通过针对具体场景进行极致抽象，通过高阶组件暴露出简单的声明\n式配置来满足该场景大部份的需求，有可视化编辑也是极轻量级的参数配置面板。两种途径可算是各有利\n弊。\nThor\n选择了第二条路，与我心目中的低代码定义是相匹配的：\n低代码是针对特定应用场景的开发方式进行极\n致抽象的过程和方法论，它需要满足两个条件：一是带来数量级的开发效率提升，二是让『公民开发者』可\n以使用\n。我们认为只有极致抽象，才能减少编码的数量，更高内聚的组件或函数，带来更快速的实现，也正\n因为编码量级数级的降低，才能够封装出简单且让普通用户能理解的参数，让非技术从业者的『公民开发\n者』参与到生产里面。\n而这种模式可能广为崇尚『通用低代码』的同学诟病说只能解决有限的场景。的确，这种模式的理念是一个","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":6,"lines":{"from":1,"to":40}}}}],["14",{"pageContent":"者』参与到生产里面。\n而这种模式可能广为崇尚『通用低代码』的同学诟病说只能解决有限的场景。的确，这种模式的理念是一个\n一个场景（今天是管理台，明天是企业级小程序）地解决问题，每个场景都把\n80-90%\n的问题解决好了，就是\n很大的提效了，剩下那些解决不了的特别需求，让开发同学写代码来解决就可以了。\nChatGPT\n怎么看\n关于两者，我也让\nChatGPT\n来做了对比：\nChatGPT\n的对比还是比较客观的，其中提到了\nThor\n的路径的问题主要是灵活性、定制化需求的满足程度方面\n有待提升，对此，我们也是有相关的解决方案的，但别急，先看看\nChatGPT\n会给我们提什么建议：\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":6,"lines":{"from":40,"to":60}}}}],["15",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n7\n/\n16\nChatGPT\n的回答再次非常到位，都说到点上了，我也逐个回应一下：\n1. Thor\n的\nDSL\n具备很强的扩展性，光说\nThorT\nable\n的组件，允许用户定义自己的字段显示组件、操作等，是\n可以满足用户常见的个性化需求。\n2. Thor\n的后端是一个\niPaaS\n底座，允许接入多源异构的数据，对其进行标准化输出（\nmodeling GraphQL\nAPI\n），是可以很好的集成外部服务和\nAPI\n的。\n3. ChatGPT\n提到了逻辑编排，无独有偶，我们团队并行在做着一款逻辑编排的服务，也是\nThor\n的兄弟产品\n--\nLoki\n，目前腾讯视频的每一次播放点击，都会调用到它编排出来的播控逻辑，每天有着近百亿次的响应；\nLoki\n的\nSchema\n设计，也是目前\nlow code Oteam\n的函数编排的\nSchema\n规范\n。对于\nThor\n的内置能力解决不了的\n需求场景，不管是后端接口，还是前端页面逻辑，都可以通过\nLoki\n来进行逻辑编排。个人认为逻辑编排，是\n低代码平台的最后一块拼图，用于解决定制化需求的。值得一提的是，\nChatGPT\n整合进\nThor\n之后，\nLoki\n也会\n结合\nChatGPT\n，实现口述逻辑，\nLoki\n自动编排，可视化呈现。\n4. \n提供可视化编辑工具，这个\nThor\n也实现了\nInplace Edit\n的编辑面板，但对比起通用可视化编辑器来讲，\nThor\n的编辑器比较场景化和薄，也易于被用户接受和使用。同时，这个可视化工具，它不是必选项，它仅仅作为\n整个系统的一小部份。\n5.","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":7,"lines":{"from":1,"to":72}}}}],["16",{"pageContent":"的编辑面板，但对比起通用可视化编辑器来讲，\nThor\n的编辑器比较场景化和薄，也易于被用户接受和使用。同时，这个可视化工具，它不是必选项，它仅仅作为\n整个系统的一小部份。\n5. \n优化文档和支持！嗯！由于之前主要是团队内部使用，在文档方面的工作仍然有不少需要提升的空间。\nThor\n的适用场景与未来\nThor\n目前作为\nOVB\n平台技术部媒资中心的端到端全栈应用开发框架，为众多媒资系统提供了强有力的支撑，\n能力也正逐步外溢至兄弟中心和部门。\nThor\n既是一套方法论、一套开发框架，未来更是一个开箱即用的\nPaaS\n平台，适用场景有很多：\n- \n前后端全栈快速开发的框架。\n- \n系统集成以及遗留系统的现代化，解决数据孤岛、烟囱的问题。\n- \n数据集市。\n- \n智能\nCMS\n。\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":7,"lines":{"from":72,"to":101}}}}],["17",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n8\n/\n16\n- \n中小企业自主数字化生产平台，对标\nPower apps\n，差异在于\npower apps\n基于\nMicrosoft\n的\nOffice\n套件，\nThor\napps\n则是常规的技术栈。\n特别是有了自然语言大模型的加持，想象空间一下子打开得更大了。期望未来能以更好的姿态和大家见面。\n四、\nchatGPT\n自动生成实现方法\n1. 核心在于DSL：抽象高度语义化，足够让用户和GPT一看就懂；精简，参数足够简单；体积小，节省\nTok\nen成本。例如上面的订单表格页面，转换成JSON格式的DSL是这样的：\n2. 让GPT能够反向控制，能够让它调用本地程序。通过约定和训练，让他它总是按约定的数据格式返回信\n息，即在聊天里嵌入反向控制系统的结构化代码或配置。\n3. 无限微调，主要是一些工程技巧：\n- 每次喂给GPT当前面页最新的配置。\n- 告诉他需求，要求他实现后，返回配置的diff。\n- 本地apply diff，更新配置，实现功能修改。\n4. 并不存在什么addFilt\ner, mov\neColumn ,delet\neAction的函数指令。有低代码业界的大哥第一时间问我，\n是不是通过加一系列的函数指令来达成这个效果的？其实并不是，但曾经作为设计方案之一，被我们否决\n了，枚举这些函数工作量太大了，且枚举不完，然而GPT足够聪明，它会把用户的意图转换成针对配置数据\n的修改上。\n5. 完全可以把GPT当作一个聪明的助手，你稍有误差，他仍然能理解你的意思，并回到正确的路子上来。\n6. ChatGPT","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":8,"lines":{"from":1,"to":45}}}}],["18",{"pageContent":"的修改上。\n5. 完全可以把GPT当作一个聪明的助手，你稍有误差，他仍然能理解你的意思，并回到正确的路子上来。\n6. ChatGPT\n虽然很聪明，但在做一些精细化的操作时常常犯傻：例如还没教会它交换两个列的位置；有时还\n会自作聪明，当对话的\ntempreture\n参数设置得较高的时候，它的想法就会更天马行空，会给配置生成一些不\n存在的属性。所以，在要求高确定性和稳定的需求场景，\ntempreture\n要设置到最低，同时在工程上必须要做\n相关的容错逻辑。\n最后，贴一版\nopenai gpt3.5-turbo\n模型的\nchatCompletion\n接口训练用的对话代码（不一定是最终版），希望\n能给有类似需求的同学一些启发：\n{\n    \n\"type\"\n:\n \n\"ThorTable\"\n,\n    \n\"params\"\n:\n  \n{\n      \n\"model\"\n:\n \n\"Order\"\n,\n      \n\"columns\"\n:\n \n[\n\"product\"\n,\n \n\"quantity\"\n,\n \n\"price\"\n,\n \n\"user\"\n,\n \n\"status\"\n]\n,\n      \n\"filters\"\n:\n \n[\n\"product\"\n,\n \n\"status\"\n]\n,\n      \n\"rowActions\"\n:\n \n[\"edit\", \n\"delete\"\n]\n,\n      \n\"batchActions\"\n:\n \n[\n\"delete\"\n]\n,\n      \n\"modelActions\"\n:\n \n[\n\"add\"\n]\n    \n}\n}\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":8,"lines":{"from":45,"to":139}}}}],["19",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n9\n/\n16\nmessages \n=\n \n[\n    \n{\n        \n\"role\"\n:\n \n\"system\"\n,\n        \n\"content\"\n:\n \n\"\n你现在是一个页面开发助手，你负责把我的需求转换成\nJSON\n配置数据的操作代码（使用\nJSONPa\n    \n}\n,\n    \n{\n        \n\"role\"\n:\n \n\"user\"\n,\n        \n\"content\"\n:\n \n\"\"\"\n        \n使用\njson\n来描述一个页面，例如：\n        ```json\n        {\n          \"name\": \"\n订单列表\n\",\n          \"id\": \"order-list\",\n          \"description\": \"\n全部订单列表\n\",\n          \"component\": {\n            \"type\": \"ThorTable\",\n            \"params\":  {\n              \"model\": \"Order\",\n              \"columns\": [\n                { \"fieldName\": \"product\", \"label\": \"\n商品\n\" },\n                { \"fieldName\": \"price\", \"label\": \"\n价格\n\", \"format\": \"money\" },","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":9,"lines":{"from":1,"to":71}}}}],["20",{"pageContent":"商品\n\" },\n                { \"fieldName\": \"price\", \"label\": \"\n价格\n\", \"format\": \"money\" },\n                { \"fieldName\": \"quantity\", \"label\": \"\n数量\n\" },\n                { \"fieldName\": \"user\", \"label\": \"\n用户\n\" }\n              ],\n              \"filter\": [\n                { \"fieldName\": \"product\", \"label\": \"\n商品\n\" },\n                { \"fieldName\": \"price\", \"label\": \"\n价格\n\", \"operator\": \"gte\" }\n              ],\n              \"itemActions\": [{\"type\": \"edit\", \"params\": {\"fields\": [\"name\", \"price\"]}}],\n              \"batchActions\": [{\"type\": \"delete\"}],\n              \"modelActions\": [{\"type\": \"add\"}]\n            }\n          }\n        }\n        ```\n        \n其中\ncomponent\n属性代表这个页面的根组件及其参数，\ntype\n参数指定组件的类型（可选\nThorTable, ThorFo\n        \n        \n以下是各个组件的参数说明：\n \n        \n        ## ThorTable\n：","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":9,"lines":{"from":71,"to":111}}}}],["21",{"pageContent":"参数指定组件的类型（可选\nThorTable, ThorFo\n        \n        \n以下是各个组件的参数说明：\n \n        \n        ## ThorTable\n：\n        - model: \n表格数据模型名\n        - columns\n：表格中显示的模型字段\n, \n需要自定义字段显示样式时可指向\nformat\n或\nwidget, \n两者有额外参数\n        - filter: \n用于过滤表格数据的查询字段\n, \n默认过滤字段比较操作符为\neq\n，如需指定可通过\noperator\n参数指\n        - itemActions: \n行操作\n        - batchActions: \n批量操作\n        - modelActions: \n全局操作\n        \n        \n重点注意！！除非我给出的\nformat\n和\nwidget\n的类型，你不能自作主张使用和增加任何\nformat\n和\nwidget\n。\n        \n        ```\n        \n接下来以上面的示例页面配置为例，我们来做一些演练。\n        \"\"\"\n    \n}\n,\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":9,"lines":{"from":111,"to":165}}}}],["22",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n10\n/\n16\n \n代码中我把一些具体训练的对话去掉了，主要的脉络上面的代码中已经足够呈现出来：\n第一条\nsystem\n消息，让\nGPT\n作角色扮演，让他把需求转换成\njsonPatch\n代码返回。\n -- \n摊牌了，解决增量返回\n的底牌就是\njsonPatch\n \n。\n    \n{\n        \n\"role\"\n:\n \n\"user\"\n,\n        \n\"content\"\n:\n \n\"\n把商品表格中价格字段的表单改为总价\n\"\n    \n}\n,\n    \n{\n        \n\"role\"\n:\n \n\"assistant\"\n,\n        \n\"content\"\n:\n \n\"\"\"\n        ```json\n        [\n          {\n            \"op\": \"replace\",\n            \"path\": \"/component/params/columns/1/label\",\n            \"value\": \"\n总价\n\"\n          }\n        ]\n        ```\n        \"\"\"\n    \n}\n,\n    # \n更多训练对话。\n    \n{\n        \n\"role\"\n:\n \n\"user\"\n,\n        \n\"content\"\n:\n \n\"\n演练完毕，牢记规则，忘掉示例数据，以下进入真实的数据操作场景。\n\"\n    \n}\n,\n    \n{\n        \n\"role\"\n:\n \n\"user\"\n,\n        \n\"content\"\n:\n \n\"\n现定义\n\"","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":10,"lines":{"from":1,"to":106}}}}],["23",{"pageContent":"\"\n    \n}\n,\n    \n{\n        \n\"role\"\n:\n \n\"user\"\n,\n        \n\"content\"\n:\n \n\"\n现定义\n\"\n                   \n\"\n视频模型\nvideo, \n有以下字段\n:title, duration, author, create_time, category,\n                   \n\"\n用户模型\nUser,\n有以下字段：\nname, email, birthday, gender, last_login_time, \n    \n}\n,\n    \n{\n        \n\"role\"\n:\n \n\"user\"\n,\n        \n\"content\"\n:\n \n\"\"\"\n        \n现在有一个空页面，初始配置数据如下，后续的操作都基于这个页面来进行：\n        ```json\n        {\n          \"name\": \"\n测试\n\",\n          \"id\": \"test\",\n          \"component\": {}\n        }\n        ```\n        \"\"\"\n    \n}\n,\n    \n# {\n    \n#     \"role\": \"user\",\n    \n#     \"content\": \"\n我要一个视频列表，显示所有字段\n,\n除了是否可播；可以按是否可播、分类和标签过滤，提供\n    \n# }\n]\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":10,"lines":{"from":106,"to":182}}}}],["24",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n11\n/\n16\n第二条\nuser\n消息，就是让\nGPT\n通过一个例子了解我们的\nDSL\n，简单描述一下属性，甚至不用描述，它也能\n懂。\n中间多条来回的消息，就是对\nGPT\n进行示例演练用的，可以根据实际情况增减案例。\n倒数的三条消息（含注释那条）就是每一次发送聊天时根据当前的配置和环境（面向的数据模型）来进行动\n态组装的，也就这样，实现了近似无限的微调能力。\nT\noken\n不够用怎么办\nDSL\n的确是越简单越好，但为了满足需求，\nDSL\n的末端也会慢慢膨胀，另外，在不同的环节存在不同的\nDSL\n，那么加起来总有可能会突破\n4096\n的\ntoken\n限制啊。那要如何解决？答案仍然是工程技术，就像我们写\n软件会分模块、复杂的服务做分拆，使用\nAPI\n网关来调度一样，\nChat\n的场景我们一样可以做\nChat\n网关，做路\n由分发，通过分布式\nConversation\n会话集群来解决一个更大的问题。\n这就是另一个有趣的话题了，有兴趣咱们下来再聊。\n五、后记\n所以，前端还存在吗？开发还存在吗？\n豪无疑问，一切都还在，\nChatGPT\n和\nThor\n都是研发工程师们的智慧结晶，今天这个局面本是我们提前就料想\n到的，\nAI\n帮我们把粗重重复性的活干完，我们能够去做更有趣且有挑战性的工作呀。毕竟这个世界除了\nCURD\n，还有很多好玩的事。\n当然，这要求我们的技能不断地进行纵向与横向的进化，否则，仅有单一且不专的技能，则相对容易被替\n换。正如汽车诞生后，我们仍坚守在马车的赛道上，那是注定会被淘汰的。\nChatGPT","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":11,"lines":{"from":1,"to":62}}}}],["25",{"pageContent":"，还有很多好玩的事。\n当然，这要求我们的技能不断地进行纵向与横向的进化，否则，仅有单一且不专的技能，则相对容易被替\n换。正如汽车诞生后，我们仍坚守在马车的赛道上，那是注定会被淘汰的。\nChatGPT\n极大的提升了生产效率，且以极其快速的速度继续进化，奇点什么时候到达，还不知道，我只知道\n我们现在该做的事情，就是全面拥抱\nAI\n，让\nChatGPT\n帮助自己提高工作效率，通过\nChatGPT\n学习更多，思考\nChatGPT\n以及类似的大模型能够如何改变我们的生活与工作，并积极地推动这些改变。\n最后，感谢默默为\nThor\n作贡献的小伙伴！\n也期望我厂的大模型早日出道，以后咱们的应用就都可以迁回到混\n元助手上了。\n对\nThor\n和\nChatGPT\n类大模型在开发中的应用感兴趣的同学可以加群交流：\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":11,"lines":{"from":62,"to":88}}}}],["26",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n12\n/\n16\n更新于：2023-03-21 15:55:26\n标签：\n 人工智能 \nAI \nlow\ncode \nchatGPT \nthor\nThor\n的代码仓库：\nhttps://git.woa.com/groups/thor-family/-/projects/list\n已申报\n赞赏\n2\n人已赞赏\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":12,"lines":{"from":1,"to":28}}}}],["27",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n13\n/\n16\n我顶 165\n收藏 278\n分享\n评论 41\n表情\n图片\n更多功能\n评论\n目前看到有两种模式让gpt写代码。 一种是gpt作为交互入口，将不规则的人类语言转换为格式化的语言，不管是\nDSL还是配置。这种使用范围有限，管理后台或者一些特定场景使用应该很有用，但应该无法称之为为通用才对。\n厂内以前也有在graphql思路上发展，称之为低代码通用工具，曾经在mk和乐问上宣传很厉害。阿里也有过bpmn\n的流程化代码平台。这些本质都无法解决软件系统的内在复杂度，也就是所谓的领域逻辑。只能在crud场景，也就\n是领域逻辑不强的场景。 还有一种是gpt本身写代码，通过给足格式化的需求，或者需求用例，让gpt真正写代\n码。这种是让gpt理解当前领域来写代码。gpt会持续发展，同时我们也会以更加规范化的方式来传递需求，这种\n模式应该更加通用化点。 个人理解，有误轻喷\n2023-03-22 11:02:38\n4\n同学是认真思考了，点赞！GPT当前的特点注定现在能跑系统化跑起来的AI生成应用，就是第一种\n模式，包括Micr\noso\nft的pow\ner apps，GPT作为一种基于概率的生成式AI，现阶段输出不稳定，确\n定性差，内容有限制等原因都导致它还不能一口气生成一个复杂的系统，但单一功能现在是OK的。\n第二种生成模式，让GPT直接写原生代码，一步到位，当然是最理想的效果，但复杂系统以现有的\n编程和运维体系组合起来的熵值巨大，直接生成和迭代的难度和成本都特别高，但我们在想，是否","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":13,"lines":{"from":1,"to":35}}}}],["28",{"pageContent":"第二种生成模式，让GPT直接写原生代码，一步到位，当然是最理想的效果，但复杂系统以现有的\n编程和运维体系组合起来的熵值巨大，直接生成和迭代的难度和成本都特别高，但我们在想，是否\n有另一种可能，GPT吃透了需求后，用它自己发明的一种人类也看不懂的方式把系统以二进制的方\n式输出，直接可运行，这种纯黑盒对它来讲，可能成本更低呢？\n2023-03-22 11:46:40\n另外，同学如果仔细看文章，会发现，我们的定位其实就是特定场景的极致优化，平台解决场景8-9\n0%的问题，外加10%订制开发；至于其他场景，如法泡制即可，遑称通用啊。。\n2023-03-22 11:48:46\n@k\nong\njie\n \n，GPT吃透了需求后就不需要软件了，软件本来也只是用来解决问题的工具，GPT直\n接帮你解决问题\n2023-03-22 20:15:24\n耳目一新\n\u0000\n除平台以外，更让人感觉思路打开的，是文章解决“gpt目前只能提供代码片段”的手段 —— 细分领域\n（低代码管理后台） + 定制基座（训练gpt返回特定DSL）； 这为gpt落到生产打开了一个方向，解决了一类问\n题。按这样的思路，一大波细分领域的AI生产力工具，很快就在来的路上了。\n2023-03-21 19:32:41\n4\n希望能给大家带来这样的启发，也期望更多应用更快的出来\n2023-03-21 19:44:28\n转载\n收录\n反馈\n智能排序 \n请友善发言\nborisyang\nkong\njie\n作者\nkong\njie\n作者\nmar\nginchen\nzavier\nchen\nkong\njie\n作者\njuncjy\nchen\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":13,"lines":{"from":35,"to":82}}}}],["29",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n14\n/\n16\n大赞 \n\u0000\n\u0000\n，实在让人印象深刻，根据我的理解画了个图，不知道对不对， 还请楼主指教哈\n2023-03-23 11:30:58\n3\n可以说理解相当到位了\n2023-03-23 11:35:05\n学习了，感觉最重要的是这套DSL设计得好。我在我们业务也设计了一套DSL，类似的思路用gpt也可以达到不错\n的效果。\n2023-03-21 17:20:29\n2\n期待你的分享\n2023-03-21 19:44:56\n关于低代码的定义， 组件越初级，可做的效果越丰富，学习成本和设计成本越高； 组件越高级，领域性越强，基\n础的学习成本会降低，领域知识要求会提升， 这其实也不是低代码的问题，每个软件的定义都这样 看 demo 示\n例，组件/搭建模式，已经是定义为一个中后台应用领域性质的搭建平台了，要解决的应用搭建场景也就比较明确\n了 通过 gpt 会让它看起来非常有趣，但是词不达意会不会陷入一个反复纠正引导细节的过程，就像通过对话让 gp\nt 画图，它画出来的图看热闹还不错，但是如果用户心里有一副非常明确的图（罗辑与庄颜），这个沟通的过程会\n需要一个「沟通技巧」，得熟练掌握如何调教它，它才能更准确画出来你想要的效果，甚至还不一定某些细节你能\n说得出来，它更不可能理解，那这个沟通成本会不会还不如直接上手操作低(零)代码平台来得更快？\n2023-03-22 17:14:43\n2\n前半部份总结得好，后面的问题问到点上了，我尝试回答下：如果发生词不达意，那么主要原因会","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":14,"lines":{"from":1,"to":34}}}}],["30",{"pageContent":"2023-03-22 17:14:43\n2\n前半部份总结得好，后面的问题问到点上了，我尝试回答下：如果发生词不达意，那么主要原因会\n是因为DSL及参数的语义与当前场景的用户视角的习惯性表达方式是不一致的，似如，如果这个DSL\n的设计是以开发者的视角来做，那么普通用户讲述的需求，很可能就会很难得到匹配。所以，这也\n是我为什么强调DSL的重要性，强调要以用户的视角来设计暴露的参数。另外，在试验的过程中我\n们发现，ChatGPT在特定场景的上下文上中，对用户意图的理解及从意图到DSL的转换效果是出乎\n意料的好，我认为这种泛化能力是这一届AI应该具备的基本能力了。\n2023-03-22 17:32:04\n有个小问题，现在的 diff 都是不可逆的，如果要做撤销，那么“- 每次喂给GPT当前面页最新的配置。”就不够。\n2023-03-23 16:27:52\n撤销的实现使用其他本地数据状态管理器（S\ntat\ne Manager）做，或者本地再做一遍diff，在生结构\n化的可用于撤销的diff数据也是可行的。\n2023-03-23 16:39:31\nkong\njie\n作者\nlzaneli\nkong\njie\n作者\njiaw\nenliang\nkong\njie\n作者\nyijiejiang\nkong\njie\n作者\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":14,"lines":{"from":34,"to":68}}}}],["31",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n15\n/\n16\n嗯嗯 也是一个思路 感谢\n2023-03-24 11:43:34\n1 你现在是一个页面开发助手，你负责把我的需求转换成JSON配置数据的操作代码（使用JSONP\natch描述） 2 说\n明文档 3 开始演练\n2023-03-21 16:22:06\n是这个套路！\n2023-03-21 19:44:42\n我的理解ChatGPT多轮对话上下文理解能力的实现方式是后面的提问会带上之前对话的内容，不知是否是这样？\n2023-03-22 23:37:16\n只需要带必要的训练内容，后面无限次微调不需要都带上\n2023-03-23 08:31:56\n学习了, 很强. 期待不被t\nok\nen数量卡脖子的版本\n2023-03-21 16:12:15\n好想加入组织\n2023-03-21 16:31:38\n看了一眼组织架构，好像你那里才是组织 \n2023-03-21 16:39:53\n666，看完视频第一反应就是：”怎么训练的？“ 看到后面训练的介绍，明白了，牛逼的......\n2023-03-22 12:08:27\n请问什么时候可以开展Thor+ChatGPT的内测？报个名~\n2023-03-24 10:26:54\n很棒的想法 \n2023-03-22 17:47:07\n1\n视频挺震撼的，开发的福音\n2023-03-21 16:10:53\n太强了 实力揭秘\n2023-03-21 16:13:41\nyijiejiang\ntilin\nkong\njie\n作者\nchenshengwu\nkong\njie\n作者\nbigbinhe\ntommyhuo\nkong\njie\n作者","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":15,"lines":{"from":1,"to":55}}}}],["32",{"pageContent":"yijiejiang\ntilin\nkong\njie\n作者\nchenshengwu\nkong\njie\n作者\nbigbinhe\ntommyhuo\nkong\njie\n作者\nmusama\nstephhuang\nmar\nxli\nwondaywang\nadamsjiang\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":15,"lines":{"from":55,"to":77}}}}],["33",{"pageContent":"2023/3/28 17:34\n技术文章\n - PCG\n技术原力吧\n - KM\n平台\nhttps://km.woa.com/articles/show/573877?kmref=search&from_page=1&no=1\n16\n/\n16\nTQL！！给姐夫打 call~\n2023-03-21 16:25:02\n视频很震撼\n2023-03-21 16:34:51\nTQL！\n2023-03-21 16:39:54\n学习\n2023-03-21 16:52:18\n太强了\n2023-03-21 17:06:47\n点击加载更多\ncyrilliang\nbobbli\nchar\nonywang\nav\ner\nyhuang\nzejiawu\nCopyright©1998-2023 T\nencent. All Rights R\neser\nved. 腾讯公司研发管理部 版权所有\n广告申请\n反馈问题\n[当前对象：文章573877]\n99+\n99+\n41","metadata":{"source":"./fileUpload/技术文章 - PCG技术原力吧 - KM平台.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Creator":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.42","Producer":"Skia/PDF m108","CreationDate":"D:20230328093407+00'00'","ModDate":"D:20230328093407+00'00'"},"metadata":null,"totalPages":16},"loc":{"pageNumber":16,"lines":{"from":1,"to":39}}}}]]